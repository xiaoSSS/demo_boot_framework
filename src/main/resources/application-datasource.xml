<?xml version="1.0" encoding="UTF-8"?><beans xmlns="http://www.springframework.org/schema/beans"	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"	xmlns:aop="http://www.springframework.org/schema/aop"	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">	<!-- 配置事务管理器 -->	<bean id="transactionManager"		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">		<property name="dataSource" ref="dataSource" />	</bean>	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">		<property name="locations">			<list>				<value>classpath:application.properties</value>				<!-- <value>classpath:rmi.properties</value> -->			</list>		</property>	</bean>	<bean id="transactionInterceptor"          class="com.baizhitong.core.commons.BztTransactionInterceptor">        <property name="transactionManager" ref="transactionManager" />          <!-- 配置事务属性 -->          <property name="transactionAttributes">              <props>                  <prop key="*">PROPAGATION_REQUIRED</prop>              </props>          </property>      </bean>		<!-- 通过AOP配置提供事务增强，让service包下所有Bean的所有方法拥有事务 -->	<aop:config proxy-target-class="true" expose-proxy="true">		<aop:pointcut id="pointServiceMethod"			expression="execution(public * com.baizhitong.*.*.*.service..*.*(..))" />		<aop:advisor pointcut-ref="pointServiceMethod" advice-ref="transactionInterceptor" order="2"/>	</aop:config>	<!-- https://github.com/alibaba/druid/wiki/常见问题 -->	<bean id="dataSourceWrite" class="com.alibaba.druid.pool.DruidDataSource"		destroy-method="close" init-method="init">		<property name="driverClassName">			<value>${jdbc.driverClassName}</value>		</property>		<property name="initialSize">			<value>${dbPool.initialPoolSize}</value>		</property>		<property name="minIdle">			<value>${dbPool.minPoolSize}</value>		</property>		<property name="maxActive">			<value>${dbPool.maxStatements}</value>		</property>		<property name="url">			<value>${jdbc.url}</value>		</property>		<property name="username">			<value>${jdbc.username}</value>		</property>		<property name="password">			<value>${jdbc.password}</value>		</property>		<property name="testWhileIdle">			<value>true</value>		</property>		<property name="testOnBorrow">			<value>false</value>		</property>		<property name="validationQuery">			<value>select 1</value>		</property>		<property name="proxyFilters">			<list>			</list>		</property>		<!-- <property name="filters" value="stat" /> -->	</bean>		<bean id="dataSourceReadOnly" class="com.alibaba.druid.pool.DruidDataSource"		destroy-method="close" init-method="init">		<property name="driverClassName">			<value>${jdbc.driverClassName}</value>		</property>		<property name="initialSize">			<value>${dbPool.initialPoolSize}</value>		</property>		<property name="minIdle">			<value>${dbPool.minPoolSize}</value>		</property>		<property name="maxActive">			<value>${dbPool.maxStatements}</value>		</property>		<property name="url">			<value>${jdbc.readonly.url}</value>		</property>		<property name="username">			<value>${jdbc.readonly.username}</value>		</property>		<property name="password">			<value>${jdbc.readonly.password}</value>		</property>		<property name="testWhileIdle">			<value>true</value>		</property>		<property name="testOnBorrow">			<value>false</value>		</property>		<property name="validationQuery">			<value>select 1</value>		</property>		<property name="proxyFilters">			<list>			</list>		</property>		<!-- <property name="filters" value="stat" /> -->	</bean>	<!-- 动态数据源 -->	<bean id="dataSource" class="com.baizhitong.core.commons.datasource.DynamicDataSource" primary="true">        <property name="targetDataSources">              <map key-type="java.lang.String">                  <entry value-ref="dataSourceWrite" key="dataSourceWrite"></entry>                  <entry value-ref="dataSourceReadOnly" key="dataSourceReadOnly"></entry>            </map>          </property>          <property name="defaultTargetDataSource" ref="dataSourceWrite">          </property>      </bean>        <aop:config>         <aop:aspect id="dataSourceAspect" ref="dataSourceInterceptor" order="1">          	<aop:pointcut id="pointServiceMethod" expression="(execution(public * com.baizhitong.*.*.*.service.impl.*.*(..))        		or execution(public * com.baizhitong.service.impl.*.*(..)))" />        	<aop:before pointcut-ref="pointServiceMethod" method="setDataSource" />        </aop:aspect>      </aop:config>         	<bean id="dataSourceInterceptor" class="com.baizhitong.core.commons.datasource.DataSourceInterceptor">   	</bean>		<bean class=" org.springframework.jdbc.core.JdbcTemplate">		<property name="dataSource" ref="dataSource"></property>	</bean></beans>